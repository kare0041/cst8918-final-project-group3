name: Terraform CI-CD

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

defaults:
  run:
    working-directory: ./infra/tf-app

jobs:
  tflint:
    name: Run TFLint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache TFLint plugins
      uses: actions/cache@v4
      with:
        path: ~/.tflint.d/plugins
        key: tflint-${{ hashFiles('.tflint.hcl') }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: latest

    - name: Init TFLint
      run: tflint --init
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      run: tflint -f compact

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: tflint
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}
    env:
      ARM_SKIP_PROVIDER_REGISTRATION: true

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format Check
      run: terraform fmt -check

    - name: Terraform Plan
      id: tf-plan
      run: |
        export exitcode=0
        terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        if [ $exitcode -eq 1 ]; then
          echo "Terraform plan failed"
          exit 1
        fi

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: ./infra/tf-app/tfplan

    - name: Create Plan Summary
      id: tf-plan-string
      run: |
        TERRAFORM_PLAN=$(terraform show -no-color tfplan)
        delimiter="$(openssl rand -hex 8)"
        echo "summary<<$delimiter" >> $GITHUB_OUTPUT
        echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
        echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo '```terraform' >> $GITHUB_OUTPUT
        echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
        echo '```' >> $GITHUB_OUTPUT
        echo "</details>" >> $GITHUB_OUTPUT
        echo "$delimiter" >> $GITHUB_OUTPUT

    - name: Post Plan to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      env:
        SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: process.env.SUMMARY
          })

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.terraform-plan.outputs.tfplanExitCode == 2
    environment: production
    needs: terraform-plan

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init

    - name: Download Plan
      uses: actions/download-artifact@v4
      with:
        name: tfplan
        path: ./infra/tf-app

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan