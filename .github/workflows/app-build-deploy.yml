name: Build and Push Remix App

on:
  pull_request:
    branches: [ main ]
    paths: [ 'application/**' ]
  push:
    branches: [ main ]
    paths: [ 'application/**' ]

permissions:
  contents: read
  id-token: write

jobs:
  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    env:
      ACR_NAME: ${{ vars.ACR_NAME }}
      ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Azure (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:  ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Who am I? (service principal details)
        run: |
          echo "CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}"
          az ad sp show --id "${{ secrets.AZURE_CLIENT_ID }}" --query "{appId:appId, objectId:id, displayName:displayName}" -o json

      - name: Debug ACR & Azure context
        run: |
          echo "ACR_NAME=${ACR_NAME}"
          echo "ACR_LOGIN_SERVER=${ACR_LOGIN_SERVER}"
          echo "IMAGE_NAME=${IMAGE_NAME}"
          az account show --query "{subscription:id,name:name,tenant:tenantId}" -o json
          az acr show -n "${ACR_NAME}" --query "{name:name,loginServer:loginServer,id:id,sku:sku.name,publicNetworkAccess:publicNetworkAccess}" -o json

      - name: ACR data-plane check (list repos)
        run: |
          az acr repository list -n "${ACR_NAME}" -o tsv || true

      - name: ACR Docker Login (classic)
        run: |
          az acr login --name "${ACR_NAME}"

      - name: Docker Build
        working-directory: ./application
        run: |
          docker build -t "${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${{ github.sha }}" .
          docker tag "${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${{ github.sha }}" "${ACR_LOGIN_SERVER}/${IMAGE_NAME}:latest"

      - name: Docker Push
        run: |
          docker push "${ACR_LOGIN_SERVER}/${IMAGE_NAME}:${{ github.sha }}"
          docker push "${ACR_LOGIN_SERVER}/${IMAGE_NAME}:latest"

      - name: Docker Logout
        if: always()
        run: docker logout "${ACR_LOGIN_SERVER}"
